version: '3.8'

services:
  backend:
    build: 
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://brickify:brickify123@db:5432/brickify
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - db
      - redis
    networks:
      - brickify-network

  ai_service:
    build:
      context: .
      dockerfile: backend/ai_service/Dockerfile
    ports:
      - "8001:8001"
    environment:
      - STORAGE_PATH=/app/storage
      - DEVICE=cuda
      - MAX_MEMORY_MB=4096
    volumes:
      - ai_storage:/app/storage
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - brickify-network

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - BACKEND_URL=http://backend:8080
    depends_on:
      - backend
    networks:
      - brickify-network

  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_DB=brickify
      - POSTGRES_USER=brickify
      - POSTGRES_PASSWORD=brickify123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - brickify-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - brickify-network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - brickify-network

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    networks:
      - brickify-network

volumes:
  postgres_data:
  redis_data:
  ai_storage:

networks:
  brickify-network:
    driver: bridge 